name: linux
on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
  push:
    paths-ignore:
        - '.github/workflows/windows.yaml'
        - '.github/workflows/macos.yaml'
        - 'README.md'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [x86_64]
        mode: [release]
        compiler: [gcc]

    steps:
      # - name: Get current date as package key
      #   id: cache_key
      #   run: echo "key=$(date +'%W')" >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@v3

      # Install system dependencies (opengl)
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install mesa-common-dev

      - name: Set xmake env
        run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" >> $GITHUB_ENV

      # Install xmake
      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest
          # actions-cache-folder: .xmake-cache-W${{ steps.cache_key.outputs.key }}
          actions-cache-folder: .xmake-cache

      # Update xmake repository (in order to have the file that will be cached)
      # - name: Update xmake repository
      #   run: xmake repo --update

      # Fetch xmake dephash
      - name: Retrieve dependencies hash
        id: dep_hash
        run: echo "hash=$(xmake l utils.ci.packageskey)" >> $GITHUB_OUTPUT

      # Cache xmake dependencies
      - name: Retrieve cached xmake dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
          key: Linux-${{ matrix.arch }}-${{ matrix.mode }}-${{ steps.dep_hash.outputs.hash }}

      - name: Config
        run: |
          xmake f -y -a ${{ matrix.arch }} -m ${{ matrix.mode }} --toolchain=${{ matrix.compiler }}

      - name: Build
        run: |
          xmake -vD
